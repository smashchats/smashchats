// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Avatar Renders correctly 1`] = `
<View
  style={
    {
      "backgroundColor": undefined,
      "borderRadius": 16,
      "flex": undefined,
      "height": 100,
      "maxHeight": 100,
      "maxWidth": 100,
      "minHeight": 100,
      "minWidth": 100,
      "overflow": "hidden",
      "width": 100,
    }
  }
/>
`;

exports[`Avatar Renders correctly with fallback text 1`] = `
<View
  style={
    {
      "backgroundColor": "#64189b",
      "borderRadius": 16,
      "flex": undefined,
      "height": 64,
      "maxHeight": 64,
      "maxWidth": 64,
      "minHeight": 64,
      "minWidth": 64,
      "overflow": "hidden",
      "width": 64,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "height": "100%",
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <Text
      style={
        {
          "color": "white",
          "fontSize": 24,
          "fontWeight": "bold",
        }
      }
    >
      CN
    </Text>
  </View>
</View>
`;

exports[`Avatar Renders correctly with image 1`] = `
<View
  style={
    {
      "backgroundColor": "#64189b",
      "borderRadius": 16,
      "flex": undefined,
      "height": 64,
      "maxHeight": 64,
      "maxWidth": 64,
      "minHeight": 64,
      "minWidth": 64,
      "overflow": "hidden",
      "width": 64,
    }
  }
>
  <ViewManagerAdapter_ExpoImage
    accessibilityLabel="contact name's avatar"
    containerViewRef={"[React.ref]"}
    contentFit="contain"
    contentPosition={
      {
        "left": "50%",
        "top": "50%",
      }
    }
    height={64}
    maxHeight={64}
    maxWidth={64}
    minHeight={64}
    minWidth={64}
    nativeViewRef={"[React.ref]"}
    onError={[Function]}
    onLoad={[Function]}
    onLoadStart={[Function]}
    onProgress={[Function]}
    placeholder={[]}
    source={
      [
        {
          "uri": "data:base64,image",
        },
      ]
    }
    style={
      {
        "height": 64,
        "maxHeight": 64,
        "maxWidth": 64,
        "minHeight": 64,
        "minWidth": 64,
        "width": 64,
      }
    }
    transition={
      {
        "duration": 1000,
      }
    }
    width={64}
  />
</View>
`;
